{"version":3,"file":"static/js/851.671aa8d7.chunk.js","mappings":"mQACA,EAA+B,qCAA/B,EAAmF,qCAAnF,EAAuI,qCAAvI,EAA0L,oCAA1L,EAA4O,oC,UC4E5O,EAnEuB,WACrB,OAAgCA,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,eAAOC,EAAP,KAAiBC,EAAjB,KAMMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,GAAYC,EAAAA,IAClCC,GAAQH,EAAAA,EAAAA,IAAYI,EAAAA,GAAUF,EAAAA,IAE9BG,GAAWC,EAAAA,EAAAA,MAGXC,EAAe,SAAAC,GACnB,MAAwBA,EAAGC,OAAnBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACdZ,GAAY,SAAAa,GACV,OAAO,kBAAKA,GAAZ,cAAwBjB,EAAOgB,QASnC,OACE,iCACE,iBAAKE,UAAWC,EAAhB,WACId,IAAW,gBAAKa,UAAWC,KAC7B,eAAID,UAAWC,EAAf,2BACA,kBAAMD,UAAWC,EAAoBC,SAVxB,SAAAN,GACjBA,EAAGO,iBAVc,SAAAlB,GAAYQ,EAASW,EAAAA,EAAAA,OAAsBnB,IAW5DoB,CAAWpB,IAQP,WACE,kBAAOqB,QAAQ,OAAf,yBACA,kBACExB,KAAK,OACLyB,KAAK,OACLC,GAAG,OACHC,UAAQ,EACRC,SAAUf,KAGZ,kBAAOW,QAAQ,QAAf,0BACA,kBACExB,KAAK,QACLyB,KAAK,QACLC,GAAG,QACHC,UAAQ,EACRC,SAAUf,KAGZ,kBAAOW,QAAQ,WAAf,6BACA,kBACExB,KAAK,WACLyB,KAAK,WACLC,GAAG,WACHC,UAAQ,EACRC,SAAUf,KAEZ,mBAAQY,KAAK,SAASP,UAAWC,EAAjC,4BAKFV,IAAS,eAAIU,MAAO,CAAEU,OAAQ,QAArB,yCCjEjB,EALqB,WACjB,OAAO,SAAC,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterModule/registerModule.module.css?6be0","components/RegisterModule/RegisterModule.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerCont\":\"registerModule_registerCont__IyG90\",\"regContTitle\":\"registerModule_regContTitle__o-92U\",\"registerForm\":\"registerModule_registerForm__MFdEx\",\"sendFormBtn\":\"registerModule_sendFormBtn__nSaHS\",\"ldsDualRing\":\"registerModule_ldsDualRing__s319+\"};","import { useState } from 'react';\n\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\n\nimport { userOperations } from '../../redux/userAccount/userAccount-operations';\nimport { getLoading } from '../../redux/userAccount/userAccount-selectors';\nimport { getError } from '../../redux/userAccount/userAccount-selectors';\n\nimport style from './registerModule.module.css';\n\nconst RegisterModule = () => {\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const loading = useSelector(getLoading, shallowEqual);\n  const error = useSelector(getError, shallowEqual);\n\n  const dispatch = useDispatch();\n  const userSignup = userData => dispatch(userOperations.signup(userData));\n\n  const onChangeForm = ev => {\n    const { name, value } = ev.target;\n    setUserData(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const submitForm = ev => {\n    ev.preventDefault();\n    userSignup(userData);\n  };\n\n  return (\n    <>\n      <div className={style.registerCont}>\n        {!loading || <div className={style.ldsDualRing}></div>}\n        <h3 className={style.regContTitle}>Registration</h3>\n        <form className={style.registerForm} onSubmit={submitForm}>\n          <label htmlFor=\"name\">Your Name:</label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            id=\"name\"\n            required\n            onChange={onChangeForm}\n          />\n\n          <label htmlFor=\"email\">Your Email:</label>\n          <input\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            required\n            onChange={onChangeForm}\n          />\n\n          <label htmlFor=\"password\">Your Password:</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            id=\"password\"\n            required\n            onChange={onChangeForm}\n          />\n          <button type=\"submit\" className={style.sendFormBtn}>\n            Sign In\n          </button>\n        </form>\n      </div>\n      {!error || <h2 style={{ margin: '20px' }}>Something went wrong...</h2>}\n    </>\n  );\n};\n\nexport default RegisterModule;\n","import RegisterModule from '../../components/RegisterModule/RegisterModule';\n\nconst RegisterPage = () => {\n    return <RegisterModule/>\n};\n\n\nexport default RegisterPage;"],"names":["useState","name","email","password","userData","setUserData","loading","useSelector","getLoading","shallowEqual","error","getError","dispatch","useDispatch","onChangeForm","ev","target","value","prevState","className","style","onSubmit","preventDefault","userOperations","userSignup","htmlFor","type","id","required","onChange","margin"],"sourceRoot":""}