{"version":3,"file":"static/js/970.c984b27a.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsModule/contactForm/contactForm.module.css?61b1","components/ContactsModule/contactForm/ContactForm.jsx","components/ContactsModule/filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsModule/contactList/contactList.module.css?747b","components/ContactsModule/contactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsModule/contactsMain.module.css?097e","components/ContactsModule/ContactsMain.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\nexport const getLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"contactForm_mainContainer__XA16P\",\"addContactBtn\":\"contactForm_addContactBtn__MB520\"};","import { useState, memo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './contactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [contactData, setContactData] = useState({ name: '', number: '' });\n\n  const onSubmitForm = ev => {\n    ev.preventDefault();\n    onSubmit(contactData);\n    resetForm(ev);\n  };\n\n  const onChangeForm = ev => {\n    const { name, value } = ev.target;\n    setContactData({ ...contactData, [name]: value });\n  };\n\n  const resetForm = ev => {\n    const { name, number } = ev.target;\n    name.value = '';\n    number.value = '';\n  };\n  return (\n    <div className={styles.mainContainer}>\n      <h4>Name:</h4>\n      <form onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={onChangeForm}\n        />\n        <h4>Number:</h4>\n\n        <input\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onChangeForm}\n        />\n        <button className={styles.addContactBtn} tupe=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default memo(ContactForm);\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { memo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filteringContacts, filter }) => {\n  return (\n    <>\n      <h4>Find contacts by name</h4>\n      <input\n        value={filter} //??????\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={filteringContacts}\n      />\n    </>\n  );\n};\n\nexport default memo(Filter);\n\nFilter.defaultProps = {\n  filter: '',\n};\n\nFilter.propTypes = {\n  filteringContacts: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"contactList_mainContainer__tGJJQ\",\"listItem\":\"contactList_listItem__Zx24n\",\"removeContactBtn\":\"contactList_removeContactBtn__rFdYq\",\"listDash\":\"contactList_listDash__LsPAC\",\"ldsDualRing\":\"contactList_ldsDualRing__OWFVa\"};","import { useSelector, shallowEqual } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './contactList.module.css';\nimport { getLoading, getError } from 'redux/contacts/contacts-selectors';\n\nconst ContactList = ({ filteredContacts, deleteContactBtn }) => {\n  const loading = useSelector(getLoading, shallowEqual);\n  const error = useSelector(getError, shallowEqual)\n\n  const partOfCode = filteredContacts.map(contact => {\n    return (\n      <li className={styles.listItem} key={contact.id}>\n        <button\n          className={styles.removeContactBtn}\n          onClick={() => deleteContactBtn(contact.id)}\n          id={contact.id}\n        >\n          Delete\n        </button>\n        <span className={styles.listDash}>&#8212;</span>\n        <p>\n          {contact.name}: {contact.number}\n        </p>\n      </li>\n    );\n  });\n\n  return (\n    <div className={styles.mainContainer}>\n      {!loading || <div className={styles.ldsDualRing}></div>}\n      {!error || <h2>Something went wrong...</h2>}\n      <ul>{partOfCode}</ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  deleteContactBtn: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"contactsMain_mainContainer__iqJHz\",\"contactContainer\":\"contactsMain_contactContainer__ikJNl\",\"listContainer\":\"contactsMain_listContainer__dNVcC\"};","import { useEffect, useCallback } from 'react';\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\n\nimport operations from '../../redux/contacts/contacts-operations';\nimport filterAction from '../../redux/contacts/contacts-actions';\nimport { getContacts, getFilter } from '../../redux/contacts/contacts-selectors';\nimport { getUserToken } from '../../redux/userAccount/userAccount-selectors';\n\nimport ContactForm from './contactForm/ContactForm';\nimport Filter from './filter/Filter';\nimport ContactList from './contactList/ContactList';\n\nimport styles from './contactsMain.module.css';\n\nconst ContactsMain = () => {\n  const contacts = useSelector(getContacts, shallowEqual);\n  const filter = useSelector(getFilter, shallowEqual);\n  const userToken = useSelector(getUserToken, shallowEqual);\n\n  const dispatch = useDispatch();\n  const fetchContacts = (userToken) => dispatch(operations.fetchContacts(userToken));\n  const addContact = data => dispatch(operations.addContact(data));\n  const removeContact = contactId =>\n    dispatch(operations.removeContact(contactId));\n\n  useEffect(() => {\n    fetchContacts(userToken);\n    //eslint-disable-next-line\n  }, []);\n\n  const addNewContact = contactData => {\n    addContact(contactData);\n  };\n\n  const deleteContact = id => {\n    removeContact(id);\n  };\n\n  const filteringContacts = useCallback(ev => {\n    dispatch(filterAction(ev.target.value));\n    // eslint-disable-next-line\n  }, []);\n\n  const filteredContacts = () => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n    return filteredContacts;\n  };\n\n  return (\n    <div className={styles.mainContainer}>\n      <div className={styles.contactContainer}>\n        <ContactForm onSubmit={addNewContact} />\n      </div>\n\n      <div className={styles.listContainer}>\n        <h2>Contacts</h2>\n        <Filter filteringContacts={filteringContacts} filter={filter} />\n        <ContactList\n          deleteContactBtn={deleteContact}\n          filteredContacts={filteredContacts()}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsMain;","import ContactsMain from '../../components/ContactsModule/ContactsMain';\n\nconst ContactsPage = () => {\n  return <ContactsMain />;\n};\n\nexport default ContactsPage;\n"],"names":["getContacts","state","contacts","getLoading","loading","getError","error","getFilter","filter","ContactForm","onSubmit","useState","name","number","contactData","setContactData","onChangeForm","ev","target","value","resetForm","className","styles","preventDefault","type","title","required","onChange","tupe","memo","Filter","filteringContacts","pattern","defaultProps","filteredContacts","deleteContactBtn","useSelector","shallowEqual","partOfCode","map","contact","onClick","id","userToken","getUserToken","dispatch","useDispatch","useEffect","operations","fetchContacts","useCallback","filterAction","data","contactId","toLowerCase","includes"],"sourceRoot":""}